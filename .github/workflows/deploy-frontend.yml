name: 프론트엔드 배포 워크플로우
on:
  pull_request:
    branches:
      - release/frontend
    types: [closed]  # 병합된 PR에만 반응하게 함
jobs:

  build-and-push:
    # env:
    #  REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }} # env.local 등과 같은 설정들 넣는 곳
    #  REACT_APP_OTHER_VAR: ${{ secrets.REACT_APP_OTHER_VAR }} #
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend/ticketing-app

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.16.0 # 원하는 node.js 버전 기입

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ticketing-frontend-app:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ticketing-frontend-app:latest

  # k8s-update-SSH:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: ssh-k8s-apply
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_KEY }}
  #         script: |
  #          cd workspace/benchmark-project/k8s-setting/frontend
  #          kubectl apply -f frontend-app-deployment.yml
  #          kubectl apply -f frontend-app-service.yml
  #          kubectl apply -f ingress.yml